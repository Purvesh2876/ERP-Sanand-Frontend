import '@/styles/globals.css'
import React from 'react';
import Image from 'next/image'
import logo from '@img/logo.png';
import { useEffect, useState } from 'react';
import axios from 'axios';
import { ChakraProvider,CSSReset  ,Skeleton, SkeletonCircle, SkeletonText,useBreakpointValue } from '@chakra-ui/react'
import Head from 'next/head'

export default function App({ Component, pageProps }) {
  const [showLoader, setShowLoader] = useState(true);
  const [appInitialized, setAppInitialized] = useState(false);
  const [onOffStatus, setOnOffStatus] = useState(null);

  useEffect(() => {
    fetchOnOffStatus();
  }, []);

  const fetchOnOffStatus = async () => {
    try {
      const response = await axios.get('/api/ambicam', {
        params: { langflag: 'en' },
      });

      const { onOffStatus } = response.data;
      setOnOffStatus(onOffStatus);
    
  } catch (error) {
    console.error('Error:', error);
  }
};
  useEffect(() => {
    // Simulating app initialization delay
    const timer = setTimeout(() => {
      setShowLoader(false);
      setAppInitialized(true);
    }, isMobileView() ? 2000 : 0);


    return () => clearTimeout(timer);
  }, []);

  const isMobileView = () => {
    if (typeof window !== 'undefined') {
      return window.innerWidth <= 768;
    }
    return false;
  };

  // React.useEffect(() => {
  //   // Add an event listener to the contextmenu event to disable right-clicking
  //   document.addEventListener('contextmenu', handleContextMenu);

  //   // Cleanup the event listener when the component unmounts
  //   return () => {
  //     document.removeEventListener('contextmenu', handleContextMenu);
  //   };
  // }, []);
  // function handleContextMenu(e) {
  //   e.preventDefault();
  // }
  return (
    <>
 <Head>
        <title>Ambicam VMS</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
<script>

</script>
      </Head>
   <ChakraProvider  >
    
   {showLoader && (
  <div className="loader-container">
    <Image src={logo} alt="Loading Logo" className="loader-logo" />
    <Skeleton startColor='blue.200' endColor='blue.500' height='4px'>
      {/* span text is necessary for show SKeleton */}
      <span>Loading Ambicam</span>
    </Skeleton>
  </div>
)}
{appInitialized && !showLoader && <Component {...pageProps} />}

<style jsx>{`
  .loader-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0.8); /* Optional: Add a semi-transparent background */
    z-index: 9999; /* Make sure it's above other content */
    animation: fade-in-out 1s ease-in-out forwards;
  }
  @keyframes fade-in-out {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
  .loader-logo {
    width: 100px;
    height: 100px;
  }

  /* Add your existing media query styles here */
`}</style>
</ChakraProvider>
{/* <div>
      <h1>On/Off Status: {onOffStatus}</h1>
    </div>  */}
</>
);

};
